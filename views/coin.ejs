<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Crypto widgets</title>
    <meta name="description" content="Simple embeddable crypto widgets.">
    <link
    rel="icon"
    href="data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100'><text y='.9em' font-size='90'>ðŸ“Ÿ</text></svg>"
    />
</head>
<style>
    body{
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    font-size: 16px;
    background-color: #000000;
    color: white;
    box-sizing: border-box;
    margin:0;
    padding:0;
    }

    main{
        /* border-radius: 2px; */
        padding: 4px;
    }

    .grid-item-1 { grid-area: g1; }
    .grid-item-2 { grid-area: g2; }
    .grid-item-3 { grid-area: g3; }
    .grid-item-4 { grid-area: g4; }
    .grid-item-5 { grid-area: g5; }
    .grid-item-6 { grid-area: g6; }
    .grid-item-7 { grid-area: g7; }
    .grid-container{
        display: grid;
        grid-template-areas: 
        'g1 g2 g3 g3'
        'g1 g2 g4 g4'
        'g7 g7 g5 g5'
        'g6 g6 g6 g6';
        grid-gap: 10px;
    }

    img{
        position: relative; 
        top: 5px;
    } 
</style>
<body>
    <main>
        <div id="widget" style="max-width: 260px;">
            <div class="grid-container">
                <div class="grid-item-1">
                    <img id="logo" style="width:48px;height:48px;" src="${data.image.small}" alt="Coin logo">
                </div>
                <div class="grid-item-2">
                    <div>
                        <span id="name" style="font-size: 14px;"></span>
                        <span id="ticker" style="font-size:10px; color:grey; font-weight:500"></span>
                    </div>
                    <div id="rank" style="font-size: 10px; color: grey;"></div>
                </div>
                <div class="grid-item-3">
                    <div id="price" style="font-weight: 700;"></div>    
                </div>
                <div class="grid-item-4">
                    <div style="font-size: 10px; color: grey;">24h low / 24h high</div>
                    <div id="range" style="font-size: 12px;"></div>
                </div>
                <div class="grid-item-5">
                    <div style="font-size: 10px; color: grey;">24h volume</div>
                    <div id="volume" style="font-size: 12px;"></div>
                </div>
                <div class="grid-item-6">
                    <div style="font-size: 10px; color: grey;">Circulating / Total supply</div>
                    <div id="supply" style="font-size: 12px;"></div>
                </div>
                <div class="grid-item-7">
                    <div style="font-size: 10px; color: grey;">Market cap</div>
                    <div  id="mcap" style="font-size: 12px;"></div>
                </div>
            </div>
        </div>
    </main>
</body>
<script>
let formattedPrice, low, high, maxSupply, circulatingSupply, mcap;

//TODO Check CG total supply vs max supply

    //Get CoinGecko coin ID from URl 
    const queryString = window.location.search;
    const urlParams  = new URLSearchParams(queryString);
    const id = urlParams.get('name')
    const tvl = urlParams.get('tvl')
    if (tvl == "yes"){
        let tvlDiv = document.createElement('div')
        tvlDiv.setAttribute('class', 'tvl-row')
        tvlDiv.innerHTML = `
                <table style="width: 100%;">
                    <tr>
                        <td style="position: relative; top:-5px"><span>Total Value Locked</span></td>
                        <td style="float:right; position: relative; top:-5px"><span style="font-size: 12px;  color: grey;">Mcap/TVL</span></td>
                    </tr>
                    <tr>
                        <td class="pull" id="tvl"></td>
                        <td class="pull" id="ratio" style="float:right;"></td>
                    </tr>
                </table>
        `
        document.getElementById("widget").appendChild(tvlDiv)
    }
    setData(id) //Setting data on first load
    
    //Initializing refresh
    setInterval(() => {
        setData(id, true)
    }, 5000);

    function setData(id, isRefresh = false, hasTvl= false){
        fetch(`https://api.coingecko.com/api/v3/coins/${id}?tickers=false&community_data=false&developer_data=false&sparkline=false`)
        .then(response => response.json())
        .then(data => {
            formattedPrice =  (data.market_data.current_price.usd > 10 ? data.market_data.current_price.usd.toLocaleString() : data.market_data.current_price.usd);
            low = (data.market_data.low_24h.usd > 999 ? data.market_data.low_24h.usd.toLocaleString() : data.market_data.low_24h.usd);
            high = (data.market_data.high_24h.usd > 999 ? data.market_data.high_24h.usd.toLocaleString() : data.market_data.high_24h.usd);
            maxSupply =  (data.market_data.max_supply == null ? "N/A": data.market_data.max_supply.toLocaleString());
            circulatingSupply = (data.market_data.circulating_supply == null ? "N/A": data.market_data.circulating_supply.toLocaleString());
            mcap = (data.market_data.market_cap.usd == null ? "N/A": data.market_data.market_cap.usd.toLocaleString());
            console.log(formattedPrice)
            if (!isRefresh){
                document.getElementById("logo").src = data.image.small;
                document.getElementById("ticker").innerHTML = `[${data.symbol.toUpperCase()}]`
                setHtml("name", data.name);
            }
            setHtml("rank", `Rank: ${data.coingecko_rank}`);
            setHtml("price", `$${formattedPrice}`);
            setHtml("mcap", `$${mcap}`);
            setHtml("volume", `$${data.market_data.total_volume.usd.toLocaleString()}`)
            setSplitStats("range", low, high);
            setSplitStats("supply", circulatingSupply, maxSupply);
            
            if(tvl == 'yes'){
                setHtml("tvl", "TVL stats coming soon") //TODO Check if CoinMarketCap supports TVL stats via their API. CoinGecko does not.
            }
        })
        .catch(error => console.log(error))
    }

    function setHtml(elementId, html){
        var el = document.getElementById(elementId);
        el.innerHTML = html;
    }

    function setSplitStats(elementId, statOne, statTwo){
        var el = document.getElementById(elementId);
        el.innerHTML = `$${statOne} / $${statTwo}`;
    }
</script>
</html>