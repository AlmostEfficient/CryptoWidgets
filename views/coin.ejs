<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Crypto widgets</title>
    <meta name="description" content="Simple embeddable crypto widgets.">
    <link
    rel="icon"
    href="data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100'><text y='.9em' font-size='90'>ðŸ“ˆ</text></svg>"
    />
</head>
<style>
    body{
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    font-size: 14px;
    background-color: #000000;
    color: white;
    box-sizing: border-box;
    margin:0;
    padding:0;
    }

    main{
        border-radius: 1em;
        padding: 1em;
    }

    td {
        font-size: 12px;
    }

    td span{
        font-size: 10px;
        color: gray;
    }
</style>
<body>
    <main>
        <div id="widget" style="max-width: 250px;">
            
        </div>
    </main>
</body>
<script>


//TODO Check CG total supply vs max supply
    function widget(id){
        fetch(`https://api.coingecko.com/api/v3/coins/${id}?tickers=false&community_data=false&developer_data=false&sparkline=false`)
        .then(response => response.json())
        .then(data => {
            let formattedPrice =  (data.market_data.current_price.usd > 10 ? data.market_data.current_price.usd.toLocaleString() : data.market_data.current_price.usd);
            let maxSupply =  (data.market_data.max_supply == null ? "N/A": data.market_data.max_supply.toLocaleString());
            let circulatingSupply = (data.market_data.circulating_supply == null ? "N/A": data.market_data.circulating_supply.toLocaleString());
            let mcap = (data.market_data.market_cap.usd == null ? "N/A": data.market_data.market_cap.usd.toLocaleString());
            
            let div = document.createElement('div');
            div.setAttribute('class', 'top-row');
            div.innerHTML =`                       
                <div class="top-row">
                    <img style="width:32px;height:32px;float:left;" src="${data.image.small}" alt="Coin logo">
                    <div style="float:left;font-size: 14px;    margin-left: 5px;">${data.name} 
                        <span style="font-size:10px; color:grey; font-weight:500">[${data.symbol}]</span>
                        <br>
                        <span style="font-size: 10px; position: relative;  top:-1px;color: grey;">Rank: ${data.coingecko_rank}</span>
                    </div>
                    <div style="font-weight: 700; float:right;">$${formattedPrice}</div>
                    <br>
                    <div>
                        <span style="font-size: 10px; float:right; position:relative; top:3px; color: grey;">24h low / 24h high</span>
                        <div style="font-size: 12px; margin-top:4px; float:right;">$${data.market_data.low_24h.usd} / $${data.market_data.high_24h.usd}</div>
                    </div>
                </div>
                
                <div class="middle-row" >
                    <table style="width: 100%;">
                        <tr>
                            <td><span>Market cap</span></td>
                            <td style="float:right"><span style="font-size: 10px;  color: grey;">24h volume</span></td>
                        </tr>
                        <tr>
                            <td>$${data.market_data.market_cap.usd.toLocaleString()}</td>
                            <td style="float:right;">$${data.market_data.total_volume.usd.toLocaleString()}</td>
                        </tr>
                    </table>
                </div>
                <div class="bottom-row">
                    <table style="width: 100%;">
                        <tr>
                            <td><span>Circulating / Total supply</span></td>
                        </tr>
                        <tr>
                            <td>${circulatingSupply} / ${maxSupply}</td>
                        </tr>
                    </table>
                </div>`;
            document.getElementById("widget").appendChild(div);
            document.getElementById("searchBar").value = "";
            results.innerHTML = "";
        })
        .catch(error => console.log(error))
    }
    const queryString = window.location.search;
    const urlParams  = new URLSearchParams(queryString);
    widget(urlParams.get('name'));

</script>
</html>